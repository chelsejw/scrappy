{"ast":null,"code":"var _jsxFileName = \"/Users/chelseaee/WebDev/billboard-tech/scrappy/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Nav from './components/Nav';\nimport moment from 'moment';\nimport Options from './components/Options';\nimport MainData from './components/MainData';\nimport SupportedHeader from './components/SupportedHeader';\nimport Paginator from './components/Paginator';\n\nconst App = () => {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [failure, setFailure] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState({});\n  const [stack, setStack] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sort, setSort] = useState(\"default\");\n  const [pagination, setPagination] = useState({});\n  const [company, setCompany] = useState(null);\n  const [queries, setQueries] = useState(null);\n  useEffect(() => {\n    let stackUrlString;\n\n    if (queries && queries.length > 0) {\n      stackUrlString = `&stack=${queries.join(\"&stack=\")}`;\n    }\n\n    let companyUrlString = \"\";\n\n    if (company) {\n      companyUrlString = `&company=${company}`;\n    }\n\n    axios.get(`/jobs?page=${currentPage}`).then(res => {\n      setJobs(res.data.results);\n      setPagination({\n        count: res.data.count,\n        next: res.data.next,\n        prev: res.data.previous\n      });\n      setLastUpdate(prev => {\n        return { ...prev,\n          jobs: res.data.results[0].created_at\n        };\n      });\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      setFailure(true);\n      console.log(`Error in axios request`, err);\n    });\n    axios.get(\"/tech\").then(res => {\n      setStack(res.data);\n      setLastUpdate(prev => {\n        return { ...prev,\n          tech: res.data[res.data.length - 1].created_at\n        };\n      });\n    }).catch(err => {\n      console.log(`Error in axios request for tech`, err);\n    });\n  }, []);\n  useEffect(() => {\n    let stackUrlString;\n\n    if (queries && queries.length > 0) {\n      stackUrlString = `&stack=${queries.join(\"&stack=\")}`;\n    }\n\n    let companyUrlString = \"\";\n\n    if (company) {\n      companyUrlString = `&company=${company}`;\n    }\n\n    axios.get(`/jobs?page=${currentPage}`).then(res => {\n      console.log(res.data);\n      setJobs(res.data.results);\n      setPagination({\n        count: res.data.count,\n        next: res.data.next,\n        prev: res.data.previous\n      });\n      setLastUpdate(prev => {\n        return { ...prev,\n          jobs: res.data.results[0].created_at\n        };\n      });\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      setFailure(true);\n      console.log(`Error in axios request`, err);\n    });\n  }, [currentPage, queries, company, sort]);\n  useEffect(() => {}, [jobs, stack, lastUpdate]);\n\n  const firstItemIndex = (itemsPerPage, currentPage) => {\n    return itemsPerPage * (currentPage - 1) + 1;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SupportedHeader, {\n    lastUpdate: moment(lastUpdate.tech).format(\"DD MMMM YYYY\"),\n    stack: stack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    stack: stack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    current: currentPage,\n    info: pagination,\n    setPage: setCurrentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MainData, {\n    firstIndex: firstItemIndex(20, currentPage),\n    loading: loading,\n    failure: failure,\n    lastUpdate: moment(lastUpdate.jobs).format(\"DD MMM, h:mm:ss a\"),\n    data: jobs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    current: currentPage,\n    info: pagination,\n    setPage: setCurrentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/chelseaee/WebDev/billboard-tech/scrappy/src/App.js"],"names":["React","useState","useEffect","axios","Nav","moment","Options","MainData","SupportedHeader","Paginator","App","jobs","setJobs","loading","setLoading","failure","setFailure","lastUpdate","setLastUpdate","stack","setStack","currentPage","setCurrentPage","sort","setSort","pagination","setPagination","company","setCompany","queries","setQueries","stackUrlString","length","join","companyUrlString","get","then","res","data","results","count","next","prev","previous","created_at","catch","err","console","log","tech","firstItemIndex","itemsPerPage","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,cAAJ;;AACA,QAAIF,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAAhC,EAAmC;AACjCD,MAAAA,cAAc,GAAI,UAASF,OAAO,CAACI,IAAR,CAAa,SAAb,CAAwB,EAAnD;AACD;;AACD,QAAIC,gBAAgB,GAAG,EAAvB;;AACA,QAAIP,OAAJ,EAAa;AACXO,MAAAA,gBAAgB,GAAI,YAAWP,OAAQ,EAAvC;AACD;;AACCxB,IAAAA,KAAK,CAACgC,GAAN,CAAW,cAAad,WAAY,EAApC,EACCe,IADD,CACOC,GAAD,IAAS;AACXzB,MAAAA,OAAO,CAACyB,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAP;AACAb,MAAAA,aAAa,CAAC;AACZc,QAAAA,KAAK,EAAEH,GAAG,CAACC,IAAJ,CAASE,KADJ;AAEZC,QAAAA,IAAI,EAAEJ,GAAG,CAACC,IAAJ,CAASG,IAFH;AAGZC,QAAAA,IAAI,EAAEL,GAAG,CAACC,IAAJ,CAASK;AAHH,OAAD,CAAb;AAKAzB,MAAAA,aAAa,CAAEwB,IAAD,IAAU;AACtB,eAAO,EACL,GAAGA,IADE;AAEL/B,UAAAA,IAAI,EAAE0B,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBK;AAFrB,SAAP;AAID,OALY,CAAb;AAMA9B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAfD,EAgBC+B,KAhBD,CAgBQC,GAAD,IAAS;AACdhC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA+B,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAb,EAAsCF,GAAtC;AACD,KApBD;AAsBA3C,IAAAA,KAAK,CAACgC,GAAN,CAAU,OAAV,EACCC,IADD,CACOC,GAAD,IAAS;AACXjB,MAAAA,QAAQ,CAACiB,GAAG,CAACC,IAAL,CAAR;AACApB,MAAAA,aAAa,CAACwB,IAAI,IAAI;AACpB,eAAO,EAAC,GAAGA,IAAJ;AAAUO,UAAAA,IAAI,EAAEZ,GAAG,CAACC,IAAJ,CAASD,GAAG,CAACC,IAAJ,CAASN,MAAT,GAAgB,CAAzB,EAA4BY;AAA5C,SAAP;AACD,OAFY,CAAb;AAGH,KAND,EAOCC,KAPD,CAOQC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAa,iCAAb,EAA+CF,GAA/C;AACD,KATD;AAUH,GAzCQ,EAyCN,EAzCM,CAAT;AA2CA5C,EAAAA,SAAS,CAAC,MAAK;AACb,QAAI6B,cAAJ;;AACA,QAAIF,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAAhC,EAAmC;AACjCD,MAAAA,cAAc,GAAI,UAASF,OAAO,CAACI,IAAR,CAAa,SAAb,CAAwB,EAAnD;AACD;;AACD,QAAIC,gBAAgB,GAAG,EAAvB;;AACA,QAAIP,OAAJ,EAAa;AACXO,MAAAA,gBAAgB,GAAI,YAAWP,OAAQ,EAAvC;AACD;;AACCxB,IAAAA,KAAK,CACFgC,GADH,CACQ,cAAad,WAAY,EADjC,EAEGe,IAFH,CAESC,GAAD,IAAS;AACbU,MAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACC,IAAhB;AACA1B,MAAAA,OAAO,CAACyB,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAP;AACAb,MAAAA,aAAa,CAAC;AACZc,QAAAA,KAAK,EAAEH,GAAG,CAACC,IAAJ,CAASE,KADJ;AAEZC,QAAAA,IAAI,EAAEJ,GAAG,CAACC,IAAJ,CAASG,IAFH;AAGZC,QAAAA,IAAI,EAAEL,GAAG,CAACC,IAAJ,CAASK;AAHH,OAAD,CAAb;AAKAzB,MAAAA,aAAa,CAAEwB,IAAD,IAAU;AACtB,eAAO,EACL,GAAGA,IADE;AAEL/B,UAAAA,IAAI,EAAE0B,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBK;AAFrB,SAAP;AAID,OALY,CAAb;AAMA9B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAjBH,EAkBG+B,KAlBH,CAkBUC,GAAD,IAAS;AACdhC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA+B,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAb,EAAsCF,GAAtC;AACD,KAtBH;AAwBH,GAjCQ,EAiCN,CAACzB,WAAD,EAAcQ,OAAd,EAAuBF,OAAvB,EAAgCJ,IAAhC,CAjCM,CAAT;AAmCArB,EAAAA,SAAS,CAAC,MAAK,CACd,CADQ,EACN,CAACS,IAAD,EAAOQ,KAAP,EAAcF,UAAd,CADM,CAAT;;AAGA,QAAMiC,cAAc,GAAG,CAACC,YAAD,EAAe9B,WAAf,KAA+B;AACpD,WAAO8B,YAAY,IAAE9B,WAAW,GAAC,CAAd,CAAZ,GAA6B,CAApC;AACD,GAFD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AACE,IAAA,UAAU,EAAEhB,MAAM,CAACY,UAAU,CAACgC,IAAZ,CAAN,CAAwBG,MAAxB,CAA+B,cAA/B,CADd;AAEE,IAAA,KAAK,EAAEjC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAOE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEE,WADX;AAEE,IAAA,IAAI,EAAEI,UAFR;AAGE,IAAA,OAAO,EAAEH,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE4B,cAAc,CAAC,EAAD,EAAK7B,WAAL,CAD5B;AAEE,IAAA,OAAO,EAAER,OAFX;AAGE,IAAA,OAAO,EAAEE,OAHX;AAIE,IAAA,UAAU,EAAEV,MAAM,CAACY,UAAU,CAACN,IAAZ,CAAN,CAAwByC,MAAxB,CAA+B,mBAA/B,CAJd;AAKE,IAAA,IAAI,EAAEzC,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAqBE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEU,WADX;AAEE,IAAA,IAAI,EAAEI,UAFR;AAGE,IAAA,OAAO,EAAEH,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CAFF,CADF;AAiCH,CAnID;;AAsIA,eAAeZ,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Nav from './components/Nav'\nimport moment from 'moment'\nimport Options from './components/Options'\nimport MainData from './components/MainData'\nimport SupportedHeader from './components/SupportedHeader'\nimport Paginator from './components/Paginator'\n\nconst App = () => {\n    const [jobs, setJobs] = useState([]);\n    const [loading, setLoading] = useState(true)\n    const [failure, setFailure] = useState(false)\n    const [lastUpdate, setLastUpdate] = useState({})\n    const [stack, setStack] = useState([])\n    const [currentPage, setCurrentPage] = useState(1)\n    const [sort, setSort] = useState(\"default\")\n    const [pagination, setPagination] = useState({})\n    const [company, setCompany] = useState(null)\n    const [queries, setQueries] = useState(null)\n\n    useEffect(() => {\n      let stackUrlString;\n      if (queries && queries.length > 0) {\n        stackUrlString = `&stack=${queries.join(\"&stack=\")}`\n      }\n      let companyUrlString = \"\"\n      if (company) {\n        companyUrlString = `&company=${company}`\n      }\n        axios.get(`/jobs?page=${currentPage}`)\n        .then((res) => {\n            setJobs(res.data.results);\n            setPagination({\n              count: res.data.count,\n              next: res.data.next,\n              prev: res.data.previous,\n            })\n            setLastUpdate((prev) => {\n              return {\n                ...prev,\n                jobs: res.data.results[0].created_at\n              };\n            });\n            setLoading(false)\n        })\n        .catch((err) => {\n          setLoading(false)\n          setFailure(true)\n          console.log(`Error in axios request`, err)\n        })\n\n        axios.get(\"/tech\")\n        .then((res) => {\n            setStack(res.data)\n            setLastUpdate(prev => {\n              return {...prev, tech: res.data[res.data.length-1].created_at}\n            })\n        })\n        .catch((err) => {\n          console.log(`Error in axios request for tech`, err)\n        })\n    }, []);\n\n    useEffect(()=> {\n      let stackUrlString;\n      if (queries && queries.length > 0) {\n        stackUrlString = `&stack=${queries.join(\"&stack=\")}`;\n      }\n      let companyUrlString = \"\";\n      if (company) {\n        companyUrlString = `&company=${company}`;\n      }\n        axios\n          .get(`/jobs?page=${currentPage}`)\n          .then((res) => {\n            console.log(res.data);\n            setJobs(res.data.results);\n            setPagination({\n              count: res.data.count,\n              next: res.data.next,\n              prev: res.data.previous,\n            });\n            setLastUpdate((prev) => {\n              return {\n                ...prev,\n                jobs: res.data.results[0].created_at,\n              };\n            });\n            setLoading(false);\n          })\n          .catch((err) => {\n            setLoading(false);\n            setFailure(true);\n            console.log(`Error in axios request`, err);\n          });\n\n    }, [currentPage, queries, company, sort])\n\n    useEffect(()=> {\n    }, [jobs, stack, lastUpdate])\n\n    const firstItemIndex = (itemsPerPage, currentPage) => {\n      return itemsPerPage*(currentPage-1)+1\n    }\n\n\n    return (\n      <div>\n        <Nav />\n        <div className=\"container\">\n          <SupportedHeader\n            lastUpdate={moment(lastUpdate.tech).format(\"DD MMMM YYYY\")}\n            stack={stack}\n          />\n          <Options stack={stack}/>\n\n          <Paginator\n            current={currentPage}\n            info={pagination}\n            setPage={setCurrentPage}\n          />\n\n          <MainData\n            firstIndex={firstItemIndex(20, currentPage)}\n            loading={loading}\n            failure={failure}\n            lastUpdate={moment(lastUpdate.jobs).format(\"DD MMM, h:mm:ss a\")}\n            data={jobs}\n          />\n\n          <Paginator\n            current={currentPage}\n            info={pagination}\n            setPage={setCurrentPage}\n          />\n        </div>\n      </div>\n    );\n\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}