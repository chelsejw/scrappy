{"ast":null,"code":"var _jsxFileName = \"/Users/chelseaee/WebDev/billboard-tech/scrappy/src/components/Paginator.js\";\nimport React from 'react';\nimport PaginatorBtn from './PaginatorBtn';\n\nconst Paginator = props => {\n  const {\n    next,\n    prev,\n    count\n  } = props.info;\n  const current = props.current;\n  let pageButtons;\n  let totalPages = Math.ceil(count / 20);\n  console.log(totalPages);\n\n  for (let i = current - 2; i < current + 2; i++) {\n    pageButtons.push( /*#__PURE__*/React.createElement(PaginatorBtn, {\n      current: current,\n      setPage: props.setPage,\n      num: i,\n      text: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, count, \" Results\"), prev && /*#__PURE__*/React.createElement(PaginatorBtn, {\n    setPage: props.setPage,\n    num: current - 1,\n    text: \"<\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), \"Current Page: \", current, next && /*#__PURE__*/React.createElement(PaginatorBtn, {\n    setPage: props.setPage,\n    num: current + 1,\n    text: \">\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/chelseaee/WebDev/billboard-tech/scrappy/src/components/Paginator.js"],"names":["React","PaginatorBtn","Paginator","props","next","prev","count","info","current","pageButtons","totalPages","Math","ceil","console","log","i","push","setPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAU;AAExB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA;AAAb,MAAsBH,KAAK,CAACI,IAAlC;AACA,QAAMC,OAAO,GAAGL,KAAK,CAACK,OAAtB;AACA,MAAIC,WAAJ;AAEA,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,KAAK,GAAC,EAAhB,CAAjB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;;AAEA,OAAK,IAAIK,CAAC,GAACP,OAAO,GAAC,CAAnB,EAAsBO,CAAC,GAAGP,OAAO,GAAC,CAAlC,EAAqCO,CAAC,EAAtC,EAA0C;AACxCN,IAAAA,WAAW,CAACO,IAAZ,eACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAER,OAAvB;AAAgC,MAAA,OAAO,EAAEL,KAAK,CAACc,OAA/C;AAAwD,MAAA,GAAG,EAAEF,CAA7D;AAAgE,MAAA,IAAI,EAAEA,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMT,KAAN,aADF,EAEGD,IAAI,iBACH,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEF,KAAK,CAACc,OAA7B;AAAsC,IAAA,GAAG,EAAET,OAAO,GAAG,CAArD;AAAwD,IAAA,IAAI,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,oBAKiBA,OALjB,EAMGJ,IAAI,iBACH,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAED,KAAK,CAACc,OAA7B;AAAsC,IAAA,GAAG,EAAET,OAAO,GAAG,CAArD;AAAwD,IAAA,IAAI,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF;AAYH,CA5BD;;AA8BA,eAAeN,SAAf","sourcesContent":["import React from 'react'\nimport PaginatorBtn from './PaginatorBtn'\nconst Paginator = (props)=> {\n\n    const {next, prev, count} = props.info\n    const current = props.current\n    let pageButtons;\n\n    let totalPages = Math.ceil(count/20)\n    console.log(totalPages)\n\n    for (let i=current-2; i < current+2; i++) {\n      pageButtons.push(\n        <PaginatorBtn current={current} setPage={props.setPage} num={i} text={i} />\n      );\n    }\n\n\n    return (\n      <div className=\"my-3 text-center\">\n        <div>{count} Results</div>\n        {prev && (\n          <PaginatorBtn setPage={props.setPage} num={current - 1} text=\"<\" />\n        )}\n        Current Page: {current}\n        {next && (\n          <PaginatorBtn setPage={props.setPage} num={current + 1} text=\">\" />\n        )}\n      </div>\n    );\n}\n\nexport default Paginator"]},"metadata":{},"sourceType":"module"}